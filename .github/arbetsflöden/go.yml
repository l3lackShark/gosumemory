name:  Go
          

on: [push]
jobs:

  build:

    name: Build
    runs-on: self-hosted 
    steps:

    - name: Set up Go 1.17

      uses: actions/setup-go@v1
      with:
        go-version: 1.17
      id: go

    - name: Check out code into the Go module directory
      uses: actions/checkout@v2

    - name: Get dependencies
      run: |
        go get -v -t -d ./...
        if [ -f Gopkg.toml ]; then
            curl https://raw.githubusercontent.com/golang/dep/master/install.sh | sh
            dep ensure
        fi
    - name: Build
      run: rsrc -arch=amd64 -ico ./out.ico -o gosumemory.syso && CC=x86_64-w64-mingw32-gcc CGO_ENABLED=1 GOOS=windows GOARCH=amd64 go build -v -o win64/gosumemory.exe && rm gosumemory.syso && rsrc -arch=386 -ico ./out.ico -o gosumemory.syso && CC=i686-w64-mingw32-gcc CGO_ENABLED=1 GOOS=windows GOARCH=386 go build -v -o win32/gosumemory.exe && rm gosumemory.syso && CC=gcc go build -v -o lin64/gosumemory && CC=gcc CGO_ENABLED=1 GOARCH=386 go build -v -o lin32/gosumemory
    - name: Clone deps
      run: git clone https://github.com/l3lackShark/static && find win32 win64 lin32 lin64 -maxdepth 0 -exec cp -rf static {} \;
    - name: Upload win32
      uses: actions/upload-artifact@v1.0.0
      with:
       # Artifact name
        name: gosumemory_windows_386
       # Directory containing files to upload
        path: ./win32

    - name: Upload win64
      uses: actions/upload-artifact@v1.0.0
      with:
       # Artifact name
        name: gosumemory_windows_amd64
       # Directory containing files to upload
        path: ./win64

    - name: Upload lin32
      uses: actions/upload-artifact@v1.0.0
      with:
       # Artifact name
        name: gosumemory_linux_386
       # Directory containing files to upload
        path: ./lin32
        
    - name: Upload lin64
      uses: actions/upload-artifact@v1.0.0
      with:
       # Artifact name
        name: gosumemory_linux_amd64
       # Directory containing files to upload
        path: ./lin64

